@page "/myprofile"
@inject AuthState AuthState
@inject UserService UserService
@inject NavigationManager Navigation
@using Blazor_Labb02.BlazorModels.RequestDto

<h3>Min profil</h3>

@if (string.IsNullOrWhiteSpace(AuthState.Email))
{
    <div class="alert alert-danger">
        Du måste vara inloggad för att se denna sida.
    </div>
}
else if (user == null)
{
    <p>Laddar din profil...</p>
}
else
{
    <EditForm Model="@user" OnValidSubmit="@UpdateProfile">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Förnamn:</label>
            <InputText class="form-control" @bind-Value="user.FirstName" />
        </div>
        <div class="mb-3">
            <label>Efternamn:</label>
            <InputText class="form-control" @bind-Value="user.LastName" />
        </div>
        <div class="mb-3">
            <label>E-post:</label>
            <InputText class="form-control" @bind-Value="user.Email" />
        </div>
        <div class="mb-3">
            <label>Telefonnummer:</label>
            <InputText class="form-control" @bind-Value="user.Phone" />
        </div>
        <div class="mb-3">
            <label>Adress:</label>
            <InputText class="form-control" @bind-Value="user.Address" />
        </div>

        <button class="btn btn-primary">Spara ändringar</button>
    </EditForm>
}

@code {
    private UserRequest? user;

    protected override async Task OnInitializedAsync()
    {
        var myProfile = await UserService.GetMyProfile();
        if (myProfile is not null)
        {
            user = new UserRequest
                {
                    Id = myProfile.Id,
                    FirstName = myProfile.FirstName,
                    LastName = myProfile.LastName,
                    Email = myProfile.Email,
                    Phone = myProfile.Phone,
                    Address = myProfile.Address,
                    Role = myProfile.Role
                };
        }
    }

    private async Task UpdateProfile()
    {
        if (user is not null)
        {
            await UserService.UpdateMyProfile(user);
            Navigation.NavigateTo("/");
        }
    }
}
